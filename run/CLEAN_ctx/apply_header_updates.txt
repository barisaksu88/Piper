--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\tools\clean_inventory.py
HIT: apply_header_updates @ line 11
--------------------------------------------------------------------------------
     6: 
     7: NEEDLES = [
     8:     "set_state_dot","update_state_dot","state_dot_circle","state_label","state_text",
     9:     "current_state","_pending_state_for_ui","_waking_seen_ts","VALID_STATES",
    10:     "STATE_RE","STATE_WORD_RE","SLEEP_HINT_RE",
    11:     "refresh_ui","apply_header_updates","header_bridge",
    12:     "dev_tools","dev_controls_mount",
    13:     "persona_tone","persona_sarcasm",
    14: ]
    15: 
    16: def _read_text(p: Path) -> str:

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\_panes_impl.py
HIT: apply_header_updates @ line 71
--------------------------------------------------------------------------------
    66: from scripts.ui.helpers.scroll_utils import is_at_bottom, scroll_to_bottom_next_frame  # B04.2
    67: from scripts.ui.helpers.tag_utils import first_existing_tag, shorten_path as _shorten_path
    68: from scripts.ui.helpers.header_utils import compose_header_strings
    69: from scripts.ui.helpers.scroll_utils import update_autoscroll_badges  # B04.6
    70: from scripts.ui.helpers.dev_controls_mount import lazy_mount_under_logs  # B04.7
    71: from scripts.ui.helpers.header_bridge import apply_header_updates  # B04.8
    72: from scripts.ui.helpers.chatlog_writer import write_chat, write_logs  # B04.9
    73: from scripts.ui.helpers.dev_adapters import build_dev_adapters  # B04.12a
    74: from scripts.ui.helpers.layout_utils import apply_wraps_if_present, update_bottom_padding_if_present
    75: from scripts.ui.helpers.refresh_core import refresh_ui  # B04.13b
    76: from scripts.ui.helpers.header_bridge import set_hb_text  # B04.15

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\helpers\header_bridge.py
HIT: apply_header_updates @ line 7
--------------------------------------------------------------------------------
     2: B04.8 Header bridge â€” tiny wrapper around header bar refresh.
     3: Keeps panes.py slim. No new literals.
     4: """
     5: from __future__ import annotations
     6: 
     7: def apply_header_updates(hb_module, state_text: str, heartbeat_text: str,
     8:                          tone_text: str, sarcasm_text: str, tailing_text: str) -> None:
     9:     """Call header bar's refresh() if present, guarded."""
    10:     try:
    11:         if hb_module is not None and hasattr(hb_module, "refresh"):
    12:             hb_module.refresh(

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\helpers\refresh_core.py
HIT: apply_header_updates @ line 7
--------------------------------------------------------------------------------
     2: from __future__ import annotations
     3: 
     4: # --- imports the function relied on when refresh_ui lived in panes.py ---
     5: import dearpygui.dearpygui as dpg
     6: from scripts.ui.helpers.header_utils import compose_header_strings
     7: from scripts.ui.helpers.header_bridge import apply_header_updates
     8: from scripts.ui.helpers.scroll_utils import (
     9:     is_at_bottom,
    10:     scroll_to_bottom_next_frame,
    11:     update_autoscroll_badges,
    12: )

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\helpers\refresh_core.py
HIT: apply_header_updates @ line 206
--------------------------------------------------------------------------------
   201:         pass
   202: 
   203: 
   204:     # ---- Header state/tone/etc. text (bridge takes composed strings elsewhere) ----
   205:     try:
   206:         apply_header_updates(state_text=state_text,
   207:                              heartbeat_text=heartbeat_text,
   208:                              tailing_text="")  # tailing handled elsewhere; keep stable
   209:     except Exception:
   210:         pass
