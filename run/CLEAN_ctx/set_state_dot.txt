--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 350
--------------------------------------------------------------------------------
   345:                 try:
   346:                     try:
   347:                         from scripts.ui.pane_parts import header_bar as _hb
   348:                     except Exception:
   349:                         from ui.pane_parts import header_bar as _hb
   350:                     _hb.set_state_dot(current_state)  # updates dot + "State: …"
   351:                 except Exception:
   352:                     pass
   353: 
   354:             _refresh_needed = True
   355:             

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 362
--------------------------------------------------------------------------------
   357:             try:
   358:                 try:
   359:                     from scripts.ui.pane_parts import header_bar as _hb
   360:                 except Exception:
   361:                     from ui.pane_parts import header_bar as _hb
   362:                 _hb.set_state_dot(current_state)
   363:             except Exception:
   364:                 pass
   365:             if not state_queue or state_queue[-1] != candidate:
   366:                 state_queue.append(candidate)
   367:             if not has_state_tag:

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 561
--------------------------------------------------------------------------------
   556:                         try:
   557:                             try:
   558:                                 from scripts.ui.pane_parts import header_bar as _hb
   559:                             except Exception:
   560:                                 from ui.pane_parts import header_bar as _hb
   561:                             _hb.set_state_dot("LISTENING")
   562:                         except Exception:
   563:                             pass
   564:             except Exception:
   565:                 pass
   566:                     # Auto-advance WAKING → LISTENING after a short dwell

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 579
--------------------------------------------------------------------------------
   574:                         try:
   575:                             try:
   576:                                 from scripts.ui.pane_parts import header_bar as _hb
   577:                             except Exception:
   578:                                 from ui.pane_parts import header_bar as _hb
   579:                             _hb.set_state_dot("LISTENING")
   580:                         except Exception:
   581:                             pass
   582:             except Exception:
   583:                 pass
   584: 

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 730
--------------------------------------------------------------------------------
   725:                         try:
   726:                             try:
   727:                                 from scripts.ui.pane_parts import header_bar as _hb
   728:                             except Exception:
   729:                                 from ui.pane_parts import header_bar as _hb
   730:                             _hb.set_state_dot(new_state)
   731:                         except Exception:
   732:                             pass
   733:             except Exception:
   734:                 pass
   735: 

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 801
--------------------------------------------------------------------------------
   796:                     globals()["current_state"] = cand
   797:                     try:
   798:                         from scripts.ui.pane_parts import header_bar as _hb
   799:                     except Exception:
   800:                         from ui.pane_parts import header_bar as _hb
   801:                     _hb.set_state_dot(current_state)
   802: 
   803:                     globals()["_refresh_needed"] = True
   804:         except Exception:
   805:             pass
   806: 

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 891
--------------------------------------------------------------------------------
   886:                             
   887:                         try:
   888:                             # Some builds expose a dedicated setter for the state/dot — call whichever exists.
   889:                             if hasattr(_hb, "set_state"):
   890:                                 _hb.set_state(current_state)
   891:                             elif hasattr(_hb, "set_state_dot"):
   892:                                     _hb.set_state_dot(current_state)
   893:                             elif hasattr(_hb, "refresh_state"):
   894:                                     _hb.refresh_state(current_state)
   895:                         except Exception:
   896:                             pass

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 892
--------------------------------------------------------------------------------
   887:                         try:
   888:                             # Some builds expose a dedicated setter for the state/dot — call whichever exists.
   889:                             if hasattr(_hb, "set_state"):
   890:                                 _hb.set_state(current_state)
   891:                             elif hasattr(_hb, "set_state_dot"):
   892:                                     _hb.set_state_dot(current_state)
   893:                             elif hasattr(_hb, "refresh_state"):
   894:                                     _hb.refresh_state(current_state)
   895:                         except Exception:
   896:                             pass
   897:                         # Ensure state label + dot update every frame

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\entries\_app_gui_entry_impl.py
HIT: set_state_dot @ line 904
--------------------------------------------------------------------------------
   899:                             from scripts.ui.pane_parts import header_bar as _hb
   900:                         except Exception:
   901:                             from ui.pane_parts import header_bar as _hb  # fallback
   902: 
   903:                         try:
   904:                             _hb.set_state_dot(current_state)
   905:                         except Exception:
   906:                             pass
   907: 
   908:                     except Exception:
   909:                         pass

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\tools\clean_inventory.py
HIT: set_state_dot @ line 8
--------------------------------------------------------------------------------
     3: from __future__ import annotations
     4: import argparse, os, sys, shutil
     5: from pathlib import Path
     6: 
     7: NEEDLES = [
     8:     "set_state_dot","update_state_dot","state_dot_circle","state_label","state_text",
     9:     "current_state","_pending_state_for_ui","_waking_seen_ts","VALID_STATES",
    10:     "STATE_RE","STATE_WORD_RE","SLEEP_HINT_RE",
    11:     "refresh_ui","apply_header_updates","header_bridge",
    12:     "dev_tools","dev_controls_mount",
    13:     "persona_tone","persona_sarcasm",

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\helpers\dev_adapters.py
HIT: set_state_dot @ line 43
--------------------------------------------------------------------------------
    38:                     tailing_text=tailing_str,
    39:                 )
    40: 
    41:             # Try header's own dot setter if present
    42:             try:
    43:                 if _hb is not None and hasattr(_hb, "set_state_dot") and state_text_effective is not None:
    44:                     _hb.set_state_dot(state_text_effective)
    45:             except Exception:
    46:                 pass
    47: 
    48:             globals()["_last_state_text"] = state_text_effective

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\helpers\dev_adapters.py
HIT: set_state_dot @ line 44
--------------------------------------------------------------------------------
    39:                 )
    40: 
    41:             # Try header's own dot setter if present
    42:             try:
    43:                 if _hb is not None and hasattr(_hb, "set_state_dot") and state_text_effective is not None:
    44:                     _hb.set_state_dot(state_text_effective)
    45:             except Exception:
    46:                 pass
    47: 
    48:             globals()["_last_state_text"] = state_text_effective
    49:         except Exception:

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\helpers\dev_adapters.py
HIT: set_state_dot @ line 54
--------------------------------------------------------------------------------
    49:         except Exception:
    50:             pass
    51: 
    52:     def on_set_state(name: str):
    53:         try:
    54:             if _hb is not None and hasattr(_hb, "set_state_dot"):
    55:                 _hb.set_state_dot(name)
    56:         except Exception:
    57:             pass
    58:         _refresh_header_visual(name)
    59: 

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\helpers\dev_adapters.py
HIT: set_state_dot @ line 55
--------------------------------------------------------------------------------
    50:             pass
    51: 
    52:     def on_set_state(name: str):
    53:         try:
    54:             if _hb is not None and hasattr(_hb, "set_state_dot"):
    55:                 _hb.set_state_dot(name)
    56:         except Exception:
    57:             pass
    58:         _refresh_header_visual(name)
    59: 
    60:     def on_toggle_sarcasm():

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\helpers\refresh_core.py
HIT: set_state_dot @ line 199
--------------------------------------------------------------------------------
   194:     # ---- Ensure state dot matches the actual current_state (UI thread safe) ----
   195:     try:
   196:         from scripts.ui.pane_parts import header_bar as _hb
   197:         _name = str(globals().get("current_state", "")).strip().upper()
   198:         if _name:
   199:             _hb.set_state_dot(_name)
   200:     except Exception:
   201:         pass
   202: 
   203: 
   204:     # ---- Header state/tone/etc. text (bridge takes composed strings elsewhere) ----

--------------------------------------------------------------------------------
FILE: C:\Piper\scripts\ui\pane_parts\header_bar.py
HIT: set_state_dot @ line 86
--------------------------------------------------------------------------------
    81:     else:
    82:         name = str(state_name).strip().upper()
    83: 
    84:     try:
    85:         from . import header_bar as _hb  # self-import ok here
    86:         _hb.set_state_dot(name)
    87:     except Exception:
    88:         pass
    89:     """Update header labels; inputs are already composed strings."""
    90:     try:
    91:         if dpg.does_item_exist("state_label"):
